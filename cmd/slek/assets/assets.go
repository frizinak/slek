// Code generated by go-bindata.
// sources:
// cmd/slek/assets/assets/slek.png
// DO NOT EDIT!

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _slekPng = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x00\xc4\x11\x3b\xee\x89\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\x00\x00\x40\x00\x00\x00\x40\x08\x06\x00\x00\x00\xaa\x69\x71\xde\x00\x00\x00\x04\x67\x41\x4d\x41\x00\x00\xb1\x8f\x0b\xfc\x61\x05\x00\x00\x00\x20\x63\x48\x52\x4d\x00\x00\x7a\x26\x00\x00\x80\x84\x00\x00\xfa\x00\x00\x00\x80\xe8\x00\x00\x75\x30\x00\x00\xea\x60\x00\x00\x3a\x98\x00\x00\x17\x70\x9c\xba\x51\x3c\x00\x00\x00\x06\x62\x4b\x47\x44\x00\xff\x00\xff\x00\xff\xa0\xbd\xa7\x93\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x14\x3b\x00\x00\x14\x3b\x01\x30\xd4\xbd\x83\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xe0\x0a\x17\x0b\x07\x33\xa1\x2a\xde\x95\x00\x00\x10\x8e\x49\x44\x41\x54\x78\xda\xcd\x9b\x79\x94\x5c\x55\x9d\xc7\x3f\xf7\xbe\xa5\x5e\x6d\x5d\xdd\x5d\xbd\x24\x9d\x74\x12\xb2\x11\xe8\x60\xcc\x46\x64\x55\x34\x8a\xc1\x19\x18\x10\xc5\x23\x3a\x33\x82\x1e\x71\xd4\x11\x95\xd1\x83\x38\x8c\x8a\x8a\x41\x38\x1c\x50\x1c\x1c\x8d\x73\x46\x18\x05\xcf\xe8\xb8\x81\x03\x0a\xb2\xe8\x11\x14\x0c\x4b\x48\x08\x4b\x56\xbb\x3b\xdd\xd5\x5b\xad\xaf\xea\x2d\xf7\xce\x1f\x55\xdd\x76\x77\x3a\x49\x77\x57\x07\xf8\x9d\x53\x5d\x5d\x5d\xef\xfd\xee\xfd\x7e\xef\x6f\xbb\xf7\xfd\x5a\x30\x97\x72\xf7\xb6\xa3\x7d\x6b\x03\x89\xda\x2b\x5e\xfb\x2c\x00\x1f\x28\x01\x05\x20\x0f\x94\x8f\xa8\xe1\x92\xcb\xe7\x74\xba\xd4\x26\x70\xbc\x80\x37\x01\x2b\x80\x53\x6a\xaf\xa5\xc0\x7c\x20\x05\x44\x01\xb3\x76\x5d\x58\x03\x9d\x03\xfa\x80\xbd\xc0\x4e\xe0\x19\x60\x37\xd0\x0f\xe8\xe3\x45\x44\x7d\x04\x1c\x0e\xbc\x11\x38\x15\xd8\x02\x9c\x59\x23\x20\x35\x4b\xed\x45\x60\x1f\xf0\x07\xe0\xff\x80\xdf\xd5\x08\x9a\x28\x75\x92\x31\x3b\x02\x0e\x07\xde\x09\x5c\x04\xbc\x1b\x58\x4b\x75\x85\xe7\x52\x7c\x60\x17\xf0\x13\xe0\x47\xb5\xdf\xe7\x84\x84\x99\x11\x70\x38\xf0\x79\xc0\xfb\x80\x0f\x00\x27\xcf\x31\xe8\x23\xc9\x01\xe0\x87\xc0\x77\x81\x97\xea\x25\x62\xfa\x04\x4c\x04\x6f\x03\xe7\x03\x9f\x01\x36\xbe\x42\xc0\x27\xcb\x0b\xc0\x2d\xc0\x1d\x54\x83\xe7\xac\x48\x98\x1e\x01\x13\xc1\x77\x02\xd7\x00\xef\x07\x62\xaf\x12\xf8\x51\x09\x81\x5f\x00\xff\x46\x35\x68\xce\x98\x84\x63\x13\x30\x11\xfc\x59\xc0\x8d\x54\x03\xdd\x6b\x49\x5e\x02\xae\x06\x7e\xcc\xf8\x8c\x31\x0d\x22\x8e\x4e\xc0\x44\xf0\x97\xd4\xc0\x2f\x7c\xb5\xd1\x1e\x41\xb2\xc0\x75\xc0\x37\x00\x6f\xba\x24\x1c\x99\x80\xbf\x82\x17\xc0\x87\x80\xaf\x51\xcd\xed\xaf\x65\xf1\xd0\xe2\x06\x7a\x3b\xbf\xfc\xc4\xd9\xf7\x55\xba\x1c\x77\xec\x8b\x68\xd7\x6d\x53\xde\x60\x4e\xf9\xd7\x89\x2b\xff\x41\xe0\xeb\x40\xc3\xab\x8d\xee\x58\x12\x93\xca\x3e\x3b\x5e\xf8\xec\x87\x96\xed\x69\x5d\xdf\xe4\xde\xc5\x92\xe8\x1f\xfc\xdd\x6e\xa5\xe0\xaa\x23\xde\x73\xb8\x05\x4c\x04\xff\x6e\xe0\x76\x5e\xfb\x2b\x4f\x52\x86\x6c\x9d\xdf\xcd\x16\x23\xc3\xd3\x3b\x8b\x94\x5c\x55\x3c\x61\x81\x7d\xdb\x1b\xce\x4e\x5e\xeb\x67\x82\x8a\xbd\xea\x9b\xc7\x26\xe0\xd3\xd7\x5f\xca\x8d\xcf\xde\xc5\xe6\x33\xae\xe2\x81\xf6\xae\xd3\x09\xfd\xbb\xa8\x46\xfd\xd7\xb6\x68\xc1\x7b\x9a\x06\xb9\xad\x6d\x2f\xdf\xfd\xf1\x20\x8f\x3e\x55\x42\x03\x4b\x17\xd8\xa5\xb7\x9f\x96\xb8\x68\x28\xaf\xee\x3b\x63\x75\x04\x39\xa9\xa2\x06\x90\xe3\x3f\xac\xcd\x75\x73\x6d\xd7\x3b\x39\x35\xbb\x7f\xe1\xea\x91\x03\x5f\x4f\x84\x95\x2a\x78\x21\x99\xab\x6d\xc3\x71\x11\x01\xeb\x62\x2e\x85\xac\xcf\x33\x2f\x57\xaa\xc0\x04\x74\xf7\xfb\xb1\x1d\x7b\xbd\x35\xdb\x1e\xa9\xe0\x08\x85\x69\x08\x27\xe6\xc8\x55\xa9\x84\x3c\x71\x71\xa7\x1d\x11\x62\x5c\x0c\xd8\xfa\xc5\xbf\xc3\xf3\xf2\xcc\x2f\xe7\xac\x36\xaf\x70\xf5\xea\x7c\xef\xe9\x87\x22\x0d\xbc\x18\x6f\x65\x7b\xc3\x42\x76\xc7\xdb\x18\xb1\x62\x55\x1e\xb4\x9e\xed\x54\x8f\x8b\xc4\x65\xc8\x29\x91\x12\x31\x0c\xd2\x0d\x06\x43\xd9\x00\x01\x24\x92\x26\x0f\x2f\x58\x7e\xce\x43\x9b\xce\xfe\x77\x53\xfc\xa0\xa5\x10\xe8\xeb\xf7\xf4\xf8\x6f\x1a\xce\x85\xba\xb5\xc9\xf8\xd5\x09\x1d\xd6\x17\x8d\x51\x25\x37\xad\x56\x68\x21\x31\x50\x17\x46\x54\xf8\x05\x47\x05\x76\x8b\x57\xe4\xc4\x62\x3f\x9b\x46\xf6\xb3\x21\x7b\x90\x56\xbf\x40\xce\x88\x90\xb3\xa2\x68\x21\xeb\x98\xf2\x1c\x8a\x16\x6c\x4e\xe6\xf8\x78\xba\x9f\xa4\x23\xe8\x68\x31\x71\x5d\x45\x73\xca\x44\xae\x5d\xc4\xbd\x2d\xcb\x4e\x10\x5e\x36\xff\x91\x78\xf7\xbb\x9f\x7c\xbe\xfc\xde\x3b\xef\xcb\x25\xfe\xb8\xab\x9c\xf8\x4b\x7f\xb0\xb6\x21\x26\xe7\x1b\x00\x5b\xbf\x78\x01\x65\xc3\xc2\x35\xec\xd6\xa8\x0a\xbe\x21\xd1\x4b\xab\xba\x05\x5a\x08\x0c\x34\xcd\x7e\x89\xae\xfc\x21\x36\x65\xf7\xb3\xa0\x92\x63\xc8\x8c\x32\x64\xc7\x79\xb5\x5d\x23\x22\x35\x5f\x68\xef\x61\x5d\xb4\xc4\x70\x68\xf2\x4b\x31\x1f\xb9\xb4\x85\x7d\x4b\x16\xf1\xb3\xe8\x22\x06\x43\x4b\xce\x37\xbc\x0d\x5b\x8c\xcc\xea\xfb\x1e\xc9\xda\x07\xfb\x43\x00\x86\x72\x8a\x64\x4c\x9e\x60\x02\xdc\xd3\x7e\x32\x37\xee\xfc\x39\xfb\xa3\x4d\x97\x1a\x5a\x6d\x9a\x6a\x20\x25\xaa\x40\x9b\xfd\x12\x5b\xfa\x77\xb1\x71\x64\x3f\xbf\x4d\xaf\xe4\xde\xd6\x93\xe8\x77\x1a\x5e\x1d\xb7\xd0\x82\x35\xb1\x22\x6f\x8c\x57\xb7\x02\x8f\x14\x12\x7c\xb6\x77\x01\x9e\x16\xd4\x7c\x15\x80\x0e\xa3\xd2\x18\x95\x0a\xdb\x14\x68\xad\xd1\x5a\x20\x04\x58\xa6\x08\x8c\xcf\x7d\xe5\x3d\x9c\x97\xd9\xc5\xa0\x1d\xeb\x88\xa8\xf0\x26\x89\x6e\x3f\xfa\xa8\x55\xab\x88\x29\x9f\xae\xc2\x21\x4e\xc9\xf7\x92\x33\x1d\x7a\x9c\xd4\x2b\xef\x16\x02\x3e\x92\xce\xf0\xd6\x64\x0e\x57\x49\xbe\x9c\x99\xcf\x0e\x37\x36\xc1\x28\x05\xf0\xe1\x58\x37\xa7\x3b\x79\x92\x71\x49\xdf\x50\xd5\x02\xba\x96\xda\xea\xf4\xd5\xd1\x6f\x0b\x7d\x2e\x3c\xd8\xb5\x8e\x41\x2b\x76\x85\xa3\x82\x6f\x31\x43\x9b\x96\x5a\x53\x32\x2c\x7e\xdd\xba\x8a\x1f\xcd\x5f\x4b\xd6\x8a\xbe\x62\xd6\xd0\x6a\x06\xdc\xb3\xe4\x45\xd6\x45\x4b\x6c\x77\x63\xbc\x63\xdf\x0a\xfa\x83\xf1\xb5\x9d\x60\x95\x59\xe4\xfb\x8d\x3b\x99\x27\x3d\x5c\x64\xa6\x98\x0f\xf6\x17\x4a\x61\xd8\x94\x34\xfe\xb7\xb3\xcd\xbc\x5d\xde\xb1\xfe\x1c\x0e\x38\x4d\x49\x53\xab\x4b\x66\x0a\x1e\xaa\xae\x11\x55\x01\xe7\xf7\xed\xe0\xca\xbd\x0f\xd1\xe9\x0e\x83\x78\x05\xe2\x82\x16\xac\x75\x4a\xac\x88\x54\xd0\xc0\x6f\x0a\x0d\x93\xc0\x03\x68\xce\x8b\x0c\x30\x4f\x56\xf0\x10\xdc\x52\xe8\x1c\xf9\x94\x38\xe5\x03\x67\xad\x17\x9b\x6f\xfb\xf1\xc8\xd6\x82\xab\xb3\x66\x3c\xf4\xf0\x84\xb1\xd6\xd0\x7a\xfd\xac\xe7\x52\x7b\xdf\x38\x72\x80\x66\xbf\xc4\xb7\x16\x9f\xc9\xee\x44\xfb\xf1\xb5\x04\xa1\x79\x53\x22\x4f\x42\x86\x14\x42\x83\x07\x0a\x49\xd0\x02\xc4\x5f\xc7\x6c\x95\x3e\x6f\x8b\x0c\x61\x00\x2f\x07\x51\xfe\xa7\xdc\xba\xb4\x3f\x74\xd6\x9e\xfc\xcc\xfa\x1d\x4f\xff\xe3\x1f\xe9\x09\x35\x72\x49\x69\x08\x4b\xab\x73\x05\x3a\x59\xef\x9c\x94\x10\x2c\x2b\x0e\x70\xe5\xde\x87\x59\x9d\xeb\x39\xae\x96\x90\x90\x21\x9b\x62\x45\x24\xb0\xc7\xb7\x79\xa6\x1c\x9d\x00\x1e\x04\x1b\xac\x1c\xcb\x4c\x17\x05\x3c\xe0\x35\xd1\xaf\x6c\x03\xa1\xce\xdb\x15\xc4\x4d\xbb\xf7\x1c\x96\x9c\xb3\x0d\xf9\x54\xc3\x82\x94\xa1\xd5\x59\x73\x35\x31\x25\x04\x9d\xee\x30\x1f\xdb\xff\x28\x2b\x0b\x7d\xc7\x89\x04\xc1\x09\xb6\xc7\x4a\xbb\x8c\x06\xb6\xbb\x31\x32\x81\x35\xe9\x0a\xcd\x39\x91\x61\xa2\x28\x46\xb4\xc9\x83\x95\x66\x6a\x1e\x7e\x2a\xb0\x60\xf4\x3a\xe9\x28\x7f\xa5\x40\x9f\x38\x97\xd3\x53\x42\xb0\xd0\x1d\xe1\x8a\xfd\xbf\x67\xc1\xf1\x88\x09\x1a\xd6\x46\x4b\xa4\xcd\x80\x40\x0b\xfe\x54\x8a\xa3\xf5\xc4\x31\xda\xa4\xc7\x7a\x2b\x8f\x10\xf0\x7c\x10\xe7\xf9\x20\x46\xcd\x59\x17\x02\xab\x01\xb8\x7b\x1b\xd2\x56\xe1\x1a\xa1\x75\xf3\xdc\xce\xb0\x4a\xc2\xca\x62\x86\xcb\x0e\x3e\x4e\xc2\x2f\x33\xa7\x05\x93\xd0\x6c\x8a\x15\xb1\x85\xa6\xa0\x24\x3b\x2a\x93\x0f\xa1\x05\xab\xcc\x12\x0b\x65\x05\xa5\xe1\x71\xaf\x81\x82\x1e\x0b\x90\x36\xd5\x93\x6b\xa0\xba\x67\x58\x27\x8e\x74\x2e\x30\x07\x24\x6c\xcc\x1e\xe0\xa2\xbe\x67\x90\x5a\xd5\xaf\xb0\x26\x2d\x46\xc0\x86\x68\x11\x80\xfe\xc0\xe2\x80\x67\x4f\xf2\x7f\x58\x67\xe5\x89\x89\x10\x57\x1b\x3c\xe9\x1f\x16\xde\xba\xa8\x6d\x04\xa5\xd4\x7a\xd5\xf1\x00\x3f\x2a\x02\xcd\x3b\xfa\x9f\x63\x63\xf6\xc0\xdc\xb8\x82\x16\x9c\xec\x94\x59\x66\x57\xd3\x5f\xb7\x6f\x31\x18\x4e\x5c\x3f\x4b\x28\x4e\x31\x0b\x48\x01\x19\x65\xf1\x52\x18\x65\xd2\xc3\xa5\x25\x54\x1f\xcf\x21\xd1\xea\xb8\xee\xf7\x35\x82\x78\xe0\xf1\xae\xde\xa7\x68\xf2\x8a\xd4\xed\x0a\x02\xce\x8c\xe7\x69\x90\xd5\x8a\x6e\xbf\x6f\xe3\xaa\x89\x15\x68\x93\xf0\x59\x62\x96\x11\xc0\x9e\x30\x4a\xbf\xb2\x27\x6b\x69\xa5\x76\xc2\x25\x33\x43\xa5\xb6\xcc\xb0\x4b\xb6\xe0\xe1\x56\x02\x42\x35\xf7\xb9\xbb\x1a\x0f\xfa\x79\x7b\x66\x17\x50\x9f\xfe\xa4\x0c\x78\x73\x3c\x3f\xc6\x63\x8f\x6f\xa3\x27\x90\x2a\x98\x67\x78\xb4\x48\x1f\xa5\x61\x77\x10\xa3\xa2\x0f\x2b\xd1\x13\x40\x12\xaa\x7e\x90\xf0\x03\x45\xae\xe0\x91\x19\x76\xe9\x1b\x2c\x31\x9c\xab\xe0\xf9\x73\xe7\xb3\xd5\x69\x69\x36\x0f\xbc\x40\x67\x79\x64\xf6\xae\x50\x33\xff\xd5\x8e\x8b\xd2\x02\xa5\x05\x3d\x81\x75\x18\xa7\x8b\x64\x99\x84\x08\x09\x11\xec\x09\xa3\x4c\x61\x75\x11\x6a\xcf\x34\x64\x7b\x53\x54\xb6\xa7\x63\xb4\xa7\xa3\x34\x35\x38\x98\x86\x24\x5f\xf2\xe9\x1f\x2a\x31\x9c\xaf\x10\x86\x73\x63\x11\x1a\x41\xbb\x97\x67\xf3\xc0\xee\xd9\x57\x88\x42\xf3\xb6\x44\x8e\x26\x23\x44\x03\x0a\xe8\xb4\x3c\x96\x47\xca\xc4\xa5\x1a\x23\xa9\xd3\xa8\x60\xa1\x70\xb5\x64\x7f\xe8\x4c\xa5\xc9\xa0\x9a\x0d\x30\x91\x42\x1b\x1a\x61\x48\x03\xdb\x32\x48\x44\x2d\x2a\x7e\x48\xbe\xe8\x91\x2f\x7a\x94\x2b\x21\x4d\x0d\x11\x1c\xdb\x98\xe6\x2c\x8f\x46\x02\x9c\x31\xb4\x87\xfb\x5a\x56\xd1\xe3\x34\x32\x53\x77\x68\x36\x02\xde\x9e\xcc\x22\x84\xae\x96\xbd\xc0\xc7\xd3\xfd\xbc\xb7\x71\x88\x97\x2a\x11\x9e\x2e\xc7\x78\xc2\x8d\xb1\xce\x28\x22\x25\x14\x02\x83\x9e\xd0\xae\x0e\x73\x04\xa3\x33\x15\x22\x94\xfc\x35\x49\x0a\x01\x8e\x6d\x10\xb1\xa2\x14\xcb\x3e\xd9\xbc\xc7\xc0\xb0\x4b\x53\x83\x43\x3c\x5a\x5f\xb6\xd4\x08\xda\xbc\x02\x1b\xb3\x07\xf8\x59\xb4\x71\x66\xf8\xb5\xe0\xb4\x58\x91\xae\x9a\xf9\x8f\x8a\x25\x34\x1d\xa6\xcf\x02\xcb\xe3\x4d\x89\x3c\x9e\x16\x84\x0a\x44\x18\xc1\xf7\x0d\x2e\xd0\x39\x7e\x57\x52\xec\xf5\x22\xe3\xb3\x45\x48\xed\xe1\x89\x29\xaa\x9d\x19\x8d\x93\xc7\x13\x02\x12\x51\x0b\xcb\x94\x0c\x65\x2b\x0c\xe5\xca\x08\xe1\x10\x73\xea\x23\x41\x6a\xcd\xe9\xc3\x7b\xf9\x4d\xcb\x89\x14\x0d\x7b\xda\xf7\x19\x52\x71\x51\x6a\x98\xb8\x54\x04\x93\xaa\x3e\x55\x23\x08\xaa\x41\x4d\xd6\x7e\xcc\xb3\x34\xd7\xc7\xba\xc9\x85\x06\x07\x7c\x9b\x9f\xe4\x1a\xf9\xc6\x40\x3b\x05\x25\x2b\x54\xbb\x52\x90\x1a\x31\x78\xb4\x81\x23\x96\x41\x4b\xa3\x83\x69\x08\x86\xb2\x65\x2a\x5e\x58\x17\x01\x5a\x08\x96\xb8\x43\x2c\x76\x87\x66\x10\x0c\x05\x27\x45\xca\xbc\x39\x91\x9f\xb0\xfa\xc7\x1c\xab\xf6\x9e\x32\x42\xd6\x44\x4b\x7c\xbe\xad\x97\x8b\x53\xc3\xa0\xc5\x68\x3b\x0e\x52\xc3\xc1\x63\x29\xb2\x4c\x49\x73\x83\x03\x82\x6a\x60\xac\x23\x55\x6a\x20\x1e\x78\xbc\x2e\xd7\x33\xa3\xbb\x2e\x4a\x0d\xd3\x61\xfa\xcc\x26\x37\x69\x20\xd4\x82\x88\xd0\xac\x76\x5c\x10\x3a\x43\xb5\x25\x07\xa9\x84\xd8\x35\x1d\x25\x11\xdb\x20\x95\x88\xe0\x79\x21\x85\x92\x3f\x6b\x02\xa0\x9a\x12\xbb\x0a\x87\xb0\xc3\xe9\xe9\xe9\xb4\x3c\xde\xd9\x30\x52\xd7\x98\x00\x9e\x16\x3c\x57\x76\x40\x8b\x7d\x54\x5b\x70\x90\x4a\x88\xa7\x34\x04\xd3\x51\x90\x88\x9a\x38\x11\x93\x42\xc9\xc7\x0f\x66\x5f\x27\x28\x21\xe8\x28\x67\x69\xf2\x5d\x8e\x5d\x19\x0a\x2e\x4c\x8d\xb0\x32\x52\x9e\xd5\xea\x8f\x8a\x04\x0e\xfa\x36\x0f\x17\x93\x00\xcf\x51\x0b\x1d\xd2\x17\xc6\x76\x2d\xc4\xd0\x74\x94\x08\x21\x48\xc6\x2c\x42\xa5\x28\x95\xa7\xc5\xd9\x94\xa2\x11\x34\x06\x2e\x1d\x95\xec\x31\xe3\xc0\x7c\xcb\xe3\xfd\x8d\x83\x18\x75\x56\x90\x52\x68\x1e\x2c\x24\xd9\xe7\x45\x2a\x08\xfd\xe7\xb1\xbf\xe7\xa5\xfd\x42\xa8\x78\x61\xba\x8a\x22\x11\x03\xdb\x34\x70\xcb\x01\xaa\x8e\x58\x60\xab\x80\x4e\x77\xe4\x18\x57\x09\x2e\x6e\x18\xa6\xcb\x71\x09\xeb\xd8\x43\x08\x60\x20\x30\xf9\xef\x91\x34\x4a\x8b\x6e\xaa\x16\x00\x97\x5c\x8e\x6c\xd9\xfb\x62\x76\x60\xa4\xfc\xfb\xe9\xfa\xb5\x14\x82\xa8\x63\xe2\x05\x0a\x3f\x9c\xbd\x51\x4a\xad\x69\xaf\xe4\x8f\x5a\x15\x2e\xb2\x2a\x5c\xd6\x3c\x80\x59\xc7\xea\x8f\x3e\x1d\xf8\x8f\xa1\x56\xfe\x50\x8c\x83\xd0\x7f\x02\xba\xc7\xe6\xd1\x6b\x26\x70\xbd\xf0\xfe\xa1\x7c\xa5\x58\x74\xa7\x47\x82\x6d\x49\x40\xe3\xf9\xaa\xae\xbd\x5d\xb3\x5f\x3a\xea\x39\xc1\xdf\x37\x0d\x72\x52\xa4\x3c\xeb\xd5\x37\x84\xc6\xd3\x82\x6f\x0f\xb5\x72\x53\xa6\x9d\x10\xa1\x80\x7b\x19\x17\xf3\x64\x60\xd9\x84\xb6\xfd\x84\xd2\xfc\x39\x5b\xf0\xa6\x55\xfb\x5b\x86\x44\x0a\x41\x10\xa8\xba\x3c\x33\x11\x56\x30\xa7\x24\x40\xb0\xda\x71\xf9\x87\xa6\xc1\x59\x41\x17\x80\xaf\x05\x4f\xba\x71\xae\xec\xe9\xe4\xea\x43\x0b\xc8\x29\x03\xe0\x45\xe0\xb7\xe3\xaf\x95\x57\x6e\x7b\x92\x68\x21\x97\xc3\x30\xee\xf2\x43\xa5\x2b\xfe\xb1\x0b\x1d\x29\x05\x52\x0a\xc2\x3a\x5c\x40\x23\x88\x28\x1f\x63\x0a\x02\x0c\xa1\xb8\xa2\x39\xc3\x62\xbb\x32\xe3\xc8\x2f\x81\x7d\x9e\xcd\x87\xfe\xb2\x98\xf3\xf7\x2d\xe7\x7b\xc3\x2d\xe3\xcf\x0b\x7e\xc6\x68\xdd\x53\xeb\x1d\x92\x5b\xff\xf9\x6c\x2a\xb1\x38\xa1\x34\x7e\xae\x11\xbb\xa6\x95\xde\x44\x35\x78\x2b\x5d\xdf\xee\xde\xd4\x1a\x31\x59\x83\x16\x9c\x15\x2b\x70\x71\x6a\x78\x46\x55\xdf\x18\x01\x42\x73\x4f\xbe\x91\xbb\x47\xd2\x64\x26\x3e\x28\x39\x04\xfc\xe0\xb0\xeb\xaf\xbe\xf5\x11\xf2\xe9\x36\x9c\x42\xee\x2f\x5a\x88\xef\xcd\x68\xab\x2e\xea\x3b\xdf\x99\x8a\xea\xb8\x11\xf2\xb1\x96\x7e\x9a\xcd\x60\x56\xe4\x2a\x2d\x38\xe8\x5b\x53\x7d\x75\x37\xe3\x7b\x09\x47\x09\x00\x88\xe5\xb3\xf8\x0d\x29\x74\x24\x72\xa7\xed\x58\x8f\x1f\x6b\x10\xad\x41\xa9\x6a\x46\xa8\x47\x02\x61\xa0\xc6\x3f\x50\xd5\x82\xbf\x49\x8e\xf0\xd6\x44\x6e\x56\xab\x0f\xd5\x6d\x5e\x7f\x70\x18\x01\x7b\x81\x6f\x33\x6a\xb0\xe3\x5a\xe7\x24\xc0\x55\xb7\x3f\x46\xb8\xf3\x45\xe6\xc7\x64\x9f\x1f\x89\xde\xa0\x84\x28\x1e\x95\x65\xa5\x51\x5a\x63\x1a\xf5\xe4\x66\x8d\x6b\x58\x04\xe3\x08\x68\xb3\x7c\x3e\xda\x92\x21\x2a\x67\x1f\x5c\x3d\x2d\x26\x9b\xbe\x02\x6e\x65\x72\x83\xf5\x78\x02\x00\xf4\xe6\xb3\xe8\x4b\xb5\xb0\x2b\xd1\xfe\x8b\x40\xc8\x3b\x8e\x3c\x71\xf0\x03\x85\xd6\x1a\xcb\x94\x75\xb9\x40\xde\x8c\x10\x8e\x23\xe0\xbd\x8d\x83\x6c\x88\x16\x09\x67\xb9\xfa\x02\x28\x2b\x39\xf9\x94\xf8\x57\xc0\x7f\x8e\x7d\x9a\xd4\x38\x39\x36\xfa\xa7\xbe\x74\x0f\x96\x0e\x59\x51\xec\xf7\x0b\x46\xe4\xab\x81\x90\x53\xba\x82\x06\xca\x5e\x88\x10\x02\xdb\xaa\xa7\x40\x15\x64\xec\x24\x42\x29\x8c\x30\x60\x79\xa4\xc2\x07\x9b\x07\xa8\xe7\xdc\x49\x00\x05\x25\x19\x09\x8d\xd1\xe7\x04\x7b\x80\x7f\xa5\xda\x45\x3a\x65\xd7\xe8\x84\xe3\xd2\xbe\x48\x92\x35\xb9\x1e\x9a\xfd\xd2\xc1\xb2\x61\xfd\x8b\x12\xa2\x7b\xf2\x0d\x61\xa8\x29\x57\x02\x22\x96\x81\x69\xcc\xbe\x21\xa2\xa2\x34\xe9\xc1\x3e\x2e\x7b\xf2\x17\x5c\xb2\xe3\x41\x3e\xd6\xd0\xc3\x8a\xc8\xcc\xd3\xde\x44\x02\x34\x39\x65\x90\xaf\xe6\xfc\x1c\xf0\x39\x60\xfb\xd1\xee\x99\x40\xf8\x43\x0f\xee\x24\x7d\xc1\x66\xf2\xa6\xc3\x86\xec\xc1\x03\x19\x3b\xd9\x6b\xa0\xde\x22\x60\xec\x64\xb1\x58\x0e\x28\xb9\x3e\x0d\x49\x9b\x88\x35\xb3\xf5\x52\x4a\x53\xf6\x42\x72\x45\x8f\x6c\xde\x23\x35\x98\xa1\xa3\x30\xc8\x9a\xa4\xc7\xdf\xbe\x3e\x81\x63\xd7\xd7\x61\x62\x08\xd8\x55\x8e\x72\xc7\x48\xda\xf3\xb5\xf8\x02\xf0\x9d\xb1\x2f\x8f\xd0\x33\x7c\xd8\x88\x5f\xb9\xe6\x6e\x52\x41\x99\xc7\x1a\x17\xf3\x9e\x0f\x3e\xfc\xc3\x8a\x34\xaf\xd1\x88\x02\x54\x57\x3f\x5f\xf4\xb0\x2c\x83\x68\x64\x7a\x47\x63\x5a\x83\xe7\x87\x64\x0b\x1e\x7d\x43\x2e\xfd\x83\x2e\xf9\xa2\x87\x61\x1b\x2c\x5a\xd1\xc2\xe9\xe7\x9d\xc4\x5b\x2f\x38\x89\x54\xdc\x9c\x93\x76\x82\x9c\x32\xfc\x40\x8b\x1b\x50\xf2\x16\xa6\x88\xfa\x93\xe5\x88\xd1\xe6\xd6\x6b\xcf\x23\xa2\x02\x76\x27\xda\xe5\xc6\x91\xfd\x1f\x76\x42\xff\xfa\x5c\xae\x9c\xca\x97\x3c\xd2\x29\x87\x78\xd4\xe2\x68\x12\x84\x8a\x72\x25\xa4\x54\x0e\x28\x7b\x01\x61\xa8\xb1\x6c\x83\xe6\xd6\x38\x9d\xcb\xd3\x2c\x5a\x96\xa6\xa9\x35\x8e\x69\x1b\xa0\x41\xcf\x01\x7a\x0d\xfe\xce\x72\xf4\xc6\x0d\xcf\xae\xff\x52\x24\x56\x2c\x57\xb4\xa8\xa3\x5b\x1c\xd8\x76\xcd\x66\x02\x21\xf9\xe8\x75\xf7\x89\xef\x7c\xe2\xb4\xf7\x15\x47\x8a\x37\xc4\x23\xc6\xbc\xe6\x94\x33\xe5\x36\x5e\x29\x4d\xc5\xaf\x82\x76\x2b\x01\x81\xaf\x10\x52\xd0\xd0\x18\xa5\xe3\x84\x26\x16\xaf\x68\xa1\xad\x23\x89\x13\xab\x1e\x86\xce\x05\xe8\xb1\xb1\x21\x5f\x56\xf2\xab\x1a\x6e\xfe\x5a\x66\x7e\xe5\xf6\xc1\x56\x0a\x4a\xd6\x47\x00\xc0\x37\xaf\xdd\x82\xef\x7a\x5c\x3e\xcf\xe5\xfb\xbb\xca\x6f\x6e\x4b\xd9\x37\x38\x92\xb1\x76\x1a\xad\xc1\x0b\x42\xdc\x1a\x68\xcf\x53\x68\x34\xd1\x98\x4d\xfb\xc2\x14\x8b\x57\xa6\xe9\x58\xdc\x44\x22\xe5\x20\x64\xb5\x4d\xad\xce\xb3\x8d\xc3\x24\xd0\x62\xaf\xab\xe5\x35\x77\x8e\x34\xdf\x7d\x7e\x72\x44\x19\x02\xbe\x37\xd4\xc2\x75\xe7\x7c\xfe\x98\xf7\x4e\x2b\xe1\x5e\x7f\xc5\x69\xe0\x38\xb4\x8c\x64\xb0\x17\xb6\x2f\x49\xf8\xe5\xcf\xe3\x07\x97\x96\x2b\x81\xe3\x4e\x32\xf1\x74\x5b\x82\x45\xcb\xd3\x74\x2e\x4f\xd3\xd8\x12\xc3\xb2\x0c\xf4\x1c\x99\xf8\x64\xd1\xa0\x7c\x2d\xee\x2d\x28\xe3\xda\x8e\x48\x79\xfb\x8e\x52\x1c\x4b\x68\x56\xbd\xfe\xe6\x69\xeb\x98\x76\xc5\xf1\xd5\x2f\x5d\xc8\xa5\xdd\x4f\xf0\x48\xf3\x32\x72\xb1\x86\x88\x3c\xd8\x7d\x71\x50\xf6\xae\x92\x82\xd7\x27\x53\x0e\x0b\x96\x34\xb1\x68\x65\x9a\xb6\xf9\x0d\x44\x6a\xf1\xe1\x78\x80\x1e\x95\x40\x8b\x97\x2b\x5a\xdc\x3a\x10\x98\xff\xd5\x6a\x06\xd9\x9f\xe6\x1a\x59\xed\xb8\x6c\x5a\x7f\xe3\x8c\xf4\x4c\x3b\x8f\x3d\xf0\xdb\xe7\x49\x5d\x78\x2e\x09\xbf\x8c\xf0\xfd\x30\xea\x16\x9f\xcd\x69\xe3\x97\x4b\x4f\x6e\x1f\x38\xe3\xdc\x95\x0b\x57\x9c\xd2\xde\xd2\x94\x8e\x61\x98\xf2\xb8\x36\x87\x85\x5a\x74\x57\xb4\xfc\x6e\x5e\x19\x9f\x9e\x17\x2b\xde\x9b\x0f\xec\x4a\x54\x68\x7a\x03\x8b\xb7\x9d\xba\x75\xc6\xfa\x66\x55\x73\x7e\xfd\x93\x6f\xe4\xe2\x9b\x1f\xe6\xfe\x4f\xbc\x81\x5f\xdf\xf2\x18\xb7\x3c\x7f\xd5\x12\xc7\xaf\xbc\xd3\x12\xfa\x5d\x86\xd0\x6b\xe4\xb8\xba\x61\x2e\x44\x43\x10\x6a\xb1\xdb\xd7\xe2\xa7\xae\x96\x77\x2d\x78\xfc\xec\xe7\x7a\x37\x3d\xac\x1f\x2a\x26\x59\x66\x57\x38\x75\x86\xab\x5e\x37\x01\xa3\xf2\xec\xf6\x4f\xd1\x1f\x58\xac\xb4\xcb\x2c\x8c\x54\x78\xce\x8d\x35\xb7\x9a\xc1\x1b\x2c\xf4\x16\x4b\xe8\x33\xa5\xd0\x4b\x05\x34\xcc\x74\x10\x5d\x7d\x95\x94\x16\x07\x42\x78\xdc\xd3\xf2\x57\x45\x25\x1f\x5d\xd2\x9c\xe9\xe9\x1b\x4e\xf3\xb2\x17\xa1\x41\x86\xfc\x3c\xdf\xc8\x35\x6f\xbc\xb6\x2e\x72\xe7\xa4\x73\xe9\xd1\x27\x3e\xc3\xb6\xa1\x16\x3e\xd3\x7a\x88\x0e\xcb\x27\xd5\x75\x3f\x7b\x9f\xd9\x92\x8e\x08\xbd\xd2\x11\x6a\x8d\x80\x2e\x43\xe8\x65\x02\xda\x65\xed\x9f\xa7\x35\x58\x54\xcf\x55\x02\xa0\xac\x21\xaf\xa1\x4f\xc1\xbe\x50\x8b\x9d\xbe\x16\x4f\xbb\x5a\xee\xba\x73\xb8\xb9\xef\x93\xad\xfd\x6a\x20\x30\x79\xb6\xec\xd0\x66\x06\x33\xf6\xf3\xe3\x4e\xc0\xa8\x5c\x7e\xff\x56\x3e\x9c\xce\xd0\x1b\x58\xbc\xce\x71\x89\x49\x45\x93\x11\x60\xb5\xf7\xf0\xd8\xde\x15\x4e\x93\x11\x24\x62\x52\x25\x15\x22\x1e\x6a\x1c\x29\x10\x80\x67\x0b\x5d\x2c\x2a\x99\xcf\x2b\x99\x5f\xbf\xee\xc6\x92\xde\xf9\x4f\x0c\x85\x26\x39\x65\xd0\xeb\x5b\xb4\x98\x01\xbf\x2b\x26\xb8\xec\x8c\xeb\xe6\x72\xba\x00\xfc\x3f\x9e\x4e\x12\x7d\x29\x45\xa7\x64\x00\x00\x00\x25\x74\x45\x58\x74\x64\x61\x74\x65\x3a\x63\x72\x65\x61\x74\x65\x00\x32\x30\x31\x36\x2d\x31\x31\x2d\x30\x32\x54\x31\x34\x3a\x35\x37\x3a\x32\x30\x2b\x30\x31\x3a\x30\x30\x09\x09\xc7\xf1\x00\x00\x00\x25\x74\x45\x58\x74\x64\x61\x74\x65\x3a\x6d\x6f\x64\x69\x66\x79\x00\x32\x30\x31\x36\x2d\x31\x30\x2d\x32\x33\x54\x31\x31\x3a\x30\x37\x3a\x35\x31\x2b\x30\x32\x3a\x30\x30\x07\x9d\x4c\x51\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\x01\x00\x00\xff\xff\x36\xe6\xa5\x08\xc4\x11\x00\x00")

func slekPngBytes() ([]byte, error) {
	return bindataRead(
		_slekPng,
		"slek.png",
	)
}

func slekPng() (*asset, error) {
	bytes, err := slekPngBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "slek.png", size: 4548, mode: os.FileMode(420), modTime: time.Unix(1478095346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"slek.png": slekPng,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"slek.png": &bintree{slekPng, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

